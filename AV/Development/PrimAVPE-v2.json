{
  "translations" :{
    "en": {
      ".avTitle": "Prim's Algorithm Proficiency Exercise",
      "av_Authors": "Mohammed Fawzi, Kasper Hellström, Johanna Sänger, Artturi Tilanterä",
      ".instructLabel": "Instructions:",
      ".instructions": "Simulate the behavior of Prim's Algorithm for the given graph below. Click on the appropriate <strong>edge</strong> (parent, node) to enqueue or update a node in the Priority Queue (PQ). Click <strong>Dequeue</strong> to remove the node from PQ, and to add a node to the spanning tree. Begin from node A. The table contains the known shortest distance from A to each node alongside its parent node.",
      "av_ms_mst": "Complete minimum spanning tree",
      "av_ms_select_a": "Start by selecting node A",
      "av_ms_select_node": "Select {node}, since it's closest to the MCST.",
      "av_ms_add_edge": "<strong>Dequeue</strong> edge ({from}, {to}). It is added to the spanning tree.",
      "av_ms_unreachable": "The nearest unvisited node is at infinite distance. The algorithm ends.",
      "av_ms_update_distances": "Update distance to {node}'s neighbors. For updated nodes, set the parent node to {node}.",
      "av_ms_visit_neighbor_add": "Update {node}'s neighbors' distances. <strong>Compare</strong> the distance <span class='green'>from {node} to {neighbor}</span> to the known shortest distance for {neighbor}.<br> The current distance to {neighbor} is infinite. <strong>Enqueue</strong> {neighbor} to the priority queue. Set {neighbor}'s parent to {node}.",
      "av_ms_visit_neighbor_update": "Update {node}'s neighbors' distances.  <strong>Compare</strong> the distance of <span class='green'>from {node} to {neighbor}</span> to the known shortest distance for {neighbor}.<br>The distance from {node} to {neighbor} is shorter than the one previously discovered. <strong>Update</strong> the distance in the priority queue. Set {neighbor}'s parent to {node}.",
      "av_ms_visit_neighbor_no_action": "Update {node}'s neighbors' distances. <strong>Compare</strong> the distance <span class='green'>from {node} to {neighbor}</span> to the known shortest distance for {neighbor}.<br>The distance from {node} to {neighbor} is longer or equal than the one previously discovered. No update needed.",
      "av_update_not_possible": "It is not possible to update a node that does not exist in the priority queue.",
      "#help": "Help",
      "#about": "About",
      "reset": "New Exercise",
      "#enqueue": "Enqueue",
      "#update": "Update",
      "#dequeue": "Dequeue",
      "priority_queue": "Priority Queue",
      "node": "Node",
      "distance": "Distance",
      "parent": "Parent",
      "edge": "Edge",
      "legend": "Legend",
      "node_explanation": "<tspan>C has distance 5</tspan><tspan x='90' dy='20'>with parent B</tspan>",
      "graph_edge": "Graph edge",
      "enqueued_edge": "Enqueued edge",
      "spanning_edge": "Spanning tree edge"
    },
    "fi": {
      ".avTitle": "Primin algoritmi",
      "av_Authors": "Mohammed Fawzi, Kasper Hellström, Johanna Sänger, Artturi Tilanterä",
      ".instructLabel": "Ohjeet:",
      ".instructions": "Simuloi Primin algoritmin toimintaa annetulle verkolle. Klikkaa <strong>särmää</strong> (vanhempi, solmu) lisätäksesi tai päivittääksesi solmun prioriteettijonoon (PJ). Klikkaa <strong>Poista</strong> poistaaksesi solmun PJ:sta ja lisätäksesi solmun virityspuuhun. Aloita solmusta A. Taulukossa on lyhyin tunnettu etäisyys kullekin solmulle sen vanhempisolmusta.",
      "av_ms_mst": "Verkon pienin virityspuu",
      "av_ms_select_a": "Aloita valitsemalla solmu A.",
      "av_ms_select_node": "Valitse solmu {node}, koska se sijaitsee lähinnä virityspuuta.",
      "av_ms_add_edge": "Lisää särmä ({from}, {to}) virityspuuhun.",
      "av_ms_unreachable": "Etäisyys lähimpään vierailemattomaan solmuun on ääretön. Algoritmi päättyy.",
      "av_ms_update_distances": "Päivitä {node}:n naapurien etäisyydet.<br>Aseta päivitettyjen solmujen vanhemmaksi {node}.",
      "av_ms_visit_neighbor_add": "Päivitä {node}:n naapureiden etäisyydet. <strong>Vertaile</strong> etäisyyttä <span class='green'>solmusta {node} solmuun {neighbor}</span> tunnettuun lyhyimpään etäisyyteen {neighbor}:lle. Nykyinen etäisyys solmulle {neighbor} on ääretön. <strong>Lisää</strong> {neighbor} prioriteettijonoon. Aseta {neighbor}:n vanhemmaksi {node}.",
      "av_ms_visit_neighbor_update": "Päivitä {node}:n naapureiden etäisyydet. <strong>Vertaile</strong> etäisyyttä <span class='green'>solmusta {node} solmuun {neighbor}</span> tunnettuun lyhyimpään etäisyyteen {neighbor}:lle. Etäisyys solmusta {node} solmuun {neighbor} on lyhyempi kuin aiemmin löydetty. <strong>Päivitä</strong> etäisyys prioriteettijonoon. Aseta {neighbor}:n vanhemmaksi {node}.",
      "av_ms_visit_neighbor_no_action": "Päivitä {node}:n naapureiden etäisyydet. <strong>Vertaile</strong> etäisyyttä <span class='green'>solmusta {node} solmuun {neighbor}</span> tunnettuun lyhyimpään etäisyyteen {neighbor}:lle. Etäisyys solmusta {node} solmuun {neighbor} on yhtä suuri tai suurempi kuin aiemmin havaittu. Ei tarvetta päivityksille.",
      "av_update_not_possible": "Ei ole mahdollista päivittää solmua, joka ei ole prioriteettijonossa.",
      "#help": "Ohje",
      "#about": "Lisätietoa",
      "reset": "Uusi tehtävä",
      "#enqueue": "Lisää",
      "#update": "Päivitä",
      "#dequeue": "Poista",
      "priority_queue": "Prioriteettijono",
      "node": "Solmu",
      "distance": "Etäisyys",
      "parent": "Vanhempi",
      "edge": "Särmä",
      "legend": "Selite",
      "node_explanation": "<tspan>C:n etäisyys on 5</tspan><tspan x='90' dy='20'>vanhemman B kautta</tspan>",
      "graph_edge": "Verkon särmä",
      "enqueued_edge": "Jonossa oleva särmä",
      "spanning_edge": "Virityspuun särmä"
    }
  },
  "params": {
    "JXOP-feedback": "continuous",
    "JXOP-fixmode": "fix"
  }
}
