{
  "translations" :{
    "en": {
      ".exerciseTitle": "Rotation",
      ".instructLabel": "Instructions:",
      ".instructions": "The AVL tree below is unbalanced after the last insertion. Balance the tree by making a rotation. <br><br>Rotations can be made by modifying edges (pointers). To alter an edge, first click on the gray area of the node and then on the new node you want the edge to point to. An edge can also be \"removed\" by clicking the <strong>Set pointer to null</strong> button. When the edges have been updated, redraw the tree by clicking the <strong>Redraw tree</strong> button. If the tree is invalid, the exercise will inform about the errors instead of redrawing the tree. The tree has to be redrawn before the exercise can be graded. <br><br>Each node is represented as an oval containing a number (key field). The gray areas and arrows on the node represent pointers.",
      "av_redraw": "Redraw tree",
      "av_null":  "Set pointer to null",
      "av_error": "Unable to draw the tree because of the following errors:",
      "av_too_many_parents": "Node {val} has more than one parent.",
      "av_1_not_part_of_tree": "1 node is not part of the tree.",
      "av_not_part_of_tree": "{num} nodes are not part of the tree.",
      "av_ms_last": "The last inserted node.",
      "av_ms_unbalanced": "The unbalanced node <strong>p</strong> is highlighted.<br><strong>f</strong> is the father of <strong>p</strong>.",
      "av_ms_after_rotation": "The tree after the rotation.",
      "av_rotation_type": "We perform a <strong>{rotation}</strong>, because <br><code>f->{ploc} == p</code>&ensp;and&ensp;<code>height(p.left) {symbol} height(p.right)</code>.",
      "av_rotation": "{linenr}. <code>{left} = {right}</code>",
      "av_rotation_R": "single rotation right",
      "av_rotation_L": "single rotation left",
      "av_rotation_RL": "right-left double rotation",
      "av_rotation_LR": "left-right double rotation",
      "av_rotation_null": "{linenr}. <code>{left} = {right} </code><br><strong>{right}</strong> is a null-pointer, so we set <strong>{left}</strong> to null."
    },
    "fi": {
      ".exerciseTitle": "Rotaatio",
      ".instructLabel": "Ohjeet:",
      ".instructions": "Alla oleva AVL-puu on epätasapainossa viimeisen lisäyksen jälkeen. Tasapainota puu tekemällä rotaatio. <br><br>Rotaatio tehdään vaihtamalla kaarien (osoittimien) järjestystä. Voit muuttaa kaaria klikkaamalla solmun harmaata aluetta ja tämän jälkeen solmua, johon haluat kaaren osoittavan. Kaaren voi myös \"poistaa\" painamalla <strong>Aseta osoittimen arvoksi null</strong> -painiketta. Kun kaikki kaaret on päivitetty, piirrä puu uudestaan painamalla <strong>Piirrä puu</strong> -painiketta. Mikäli puu on virheellinen, kertoo tehtävä virheistä, eikä puuta piirretä. Puu on piirrettävä uudestaan ennen kuin tehtävää voidaan arvostella. <br><br>Visuaalisessa esityksessä soikio ja sen sisällä oleva numero vastaavat yksittäistä puun solmua, eli tietuetta ja sen avainta. Soikion harmaat alueet ja niistä lähtevät nuolet esittävät osoittimia.",
      "av_redraw": "Piirrä puu uudestaan",
      "av_null":  "Aseta osoittimen arvoksi null",
      "av_error": "Puuta ei pystytty piirtämään seuraavien virheiden takia:",
      "av_too_many_parents": "Solmulla {val} on liikaa isä-solmuja.",
      "av_1_not_part_of_tree": "1 solmu ei kuulu puuhun.",
      "av_not_part_of_tree": "{num} solmua ei kuulu puuhun.",
      "av_ms_last": "Viimeksi lisätty solmu.",
      "av_ms_unbalanced": "Epätasapainossa oleva solmu <strong>p</strong> on korostettu.<br><strong>f</strong> on <strong>p</strong>:n vanhempi.",
      "av_ms_after_rotation": "Puu rotaation jälkeen.",
      "av_rotation_type": "Tee <strong>{rotation}</strong>, koska <br><code>f->{ploc} == p</code> &ensp;ja&ensp;<code>height(p.left) {symbol} height(p.right)</code>.",
      "av_rotation": "{linenr}. <code>{left} = {right}</code>",
      "av_rotation_R": "yksinkertainen rotaatio oikealle",
      "av_rotation_L": "yksinkertainen rotaatio vasemmalle",
      "av_rotation_RL": "oikea-vasen-kaksoisrotaatio",
      "av_rotation_LR": "vasen-oikea-kaksoisrotaatio",
      "av_rotation_null": "{linenr}. <code>{left} = {right} </code><br><code>{right}</code> on null-osoitin, joten asetetaan <code>{left}</code>:n arvoksi null."
    }
  },
  "code" : {
    "C": {
      "single": {
        "url": "../../SourceCode/C/Binary/TreeRotation.c",
        "startAfter": "/* *** ODSATag: single *** */",
        "endBefore": "/* *** ODSAendTag: single *** */"
      },
      "double": {
        "url": "../../SourceCode/C/Binary/TreeRotation.c",
        "startAfter": "/* *** ODSATag: double *** */",
        "endBefore": "/* *** ODSAendTag: double *** */"
      },
      "struct": {
        "url": "../../SourceCode/C/Binary/TreeRotation.c",
        "startAfter": "/* *** ODSATag: struct *** */",
        "endBefore": "/* *** ODSAendTag: struct *** */"
      }
    }
  }
}
